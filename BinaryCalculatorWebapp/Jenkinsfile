pipeline {
 environment {
    PROJECT = credentials('project_id') //"rich-archery-419018"
    APP_NAME = "binarycalculatorwebapp"
    CLUSTER = credentials("cluster_name")
    CLUSTER_ZONE = credentials("cluster_zone")
    REPO_PATH= credentials("repo_path")
    IMAGE_TAG = "$REPO_PATH/${APP_NAME}"
    SERVICE_ACCOUNT= credentials('serive_account')
  }
    agent{
        kubernetes {
      label 'sample-app'
      yaml """
apiVersion: v1
kind: Pod
metadata:
labels: 
  component: ci
spec:
  containers:
  # Use service account that can deploy to all namespaces
  - name: gcloud
    image:  google/cloud-sdk:latest
    command:
    - cat
    tty: true
"""
    }
}
    tools{
        maven 'maven'
    }
    stages {
        stage ('init') {
            steps{
                git( url: 'https://github.com/GeorgeDaoud3/Jenkins-test.git',branch: "main" )
                sh 'ls'
            }
        }
        stage ('test') {
            steps {
                sh 'mvn clean test -f ./BinaryCalculatorWebapp/pom.xml'
            }
        }
        stage('build'){
            steps{
                sh 'mvn package -DskipTests -f ./BinaryCalculatorWebapp/ clean package'
            }
        }
        stage('containerize'){
            steps{
                container('gcloud') {
                    dir('BinaryCalculatorWebapp'){
                        sh 'gcloud auth activate-service-account --key-file $SERVICE_ACCOUNT'
                        sh 'gcloud config set project $PROJECT'
                        script {
                            try {
                                sh 'gcloud builds submit -t $IMAGE_TAG --suppress-logs'
                            }
                            catch (Exception e) {
                            }
                        }
                    }
                }
            }
        }
        stage('deployment'){
            steps{
                container('gcloud') {
                    dir('BinaryCalculatorWebapp'){
                        sh 'gcloud auth activate-service-account --key-file $SERVICE_ACCOUNT'
                        sh 'gcloud config set project $PROJECT'
                        sh 'gcloud container clusters get-credentials $CLUSTER --region=$CLUSTER_ZONE'
                        script{
                            try{
                                sh 'kubectl delete deployment binarycalculator-deployment'
                            }
                            catch (Exception e){
                                
                            }
                        }
                        sh 'kubectl create deployment binarycalculator-deployment --image $IMAGE_TAG --port=8080'

                    }
                }
            }
        }
        stage('service'){
            steps{
                container('gcloud') {
                    dir('BinaryCalculatorWebapp'){
                        sh 'gcloud auth activate-service-account --key-file $SERVICE_ACCOUNT'
                        sh 'gcloud config set project $PROJECT'
                        sh 'gcloud container clusters get-credentials $CLUSTER --region=$CLUSTER_ZONE'
                        script{
                            try{
                                sh 'kubectl expose deployment binarycalculator-deployment --type=LoadBalancer --name=binarycalculator-service'
                            }
                            catch (Exception e){
                                
                            }
                        }
                        sh "kubectl get service/binarycalculator-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}'"

                    }
                }
            }
        }
    }
}
